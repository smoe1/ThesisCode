; default values (empty string means no default)
[dogParams]
ndims       = 1          ; number of dimensions
mesh_type   = Cartesian  ; (either Cartesian or Unstructured) 
nout        = must_set   ; number of output times to plot output
tfinal      = must_set   ; final time
dtv(1)      = must_set   ; initial dt
dtv(2)      = must_set   ; max allowable dt 
cflv(1)     = must_set   ; max allowable Courant number 1/(2k-1)
cflv(2)     = must_set   ; desired Courant number
nv          = 500000     ; max number of time steps per call to DogSolve
time_stepping_method = Runge-Kutta ; (e.g., Runge-Kutta, SDC, Advec)
limiter_method = moment ; (e.g., moment, viscosity)
space_order = 1   ; =method(1)= order of accuracy in space
time_order  = 1   ; =method(2)= order of accuracy in time
use_limiter = 0   ; =method(3)= use limiter (1-yes, 0-no)
verbosity   = 1   ; =method(4)= verbosity of output
mcapa       = 0   ; =method(5)= mcapa (capacity function index in aux arrays)
maux        = 0   ; =method(6)= maux (number of aux arrays, maux >= mcapa)
source_term = 0   ; =method(7)= source term (1-yes, 0-no)
flux_term   = 1   ; 0 turns off flux term
splitting   = none ; 1st order: fs, sf; 2nd order: fsf, sfs
meqn        = 1   ; =number of= equations
mrestart    = -1  ; restart from old data (1=yes, 0=no, -1=not set)
nstart      = -1   ; if nonnegative set nrestart=nstart/nout_per_restart
nrestart    = -1   ; if nonnegative restart from file q(nrestart)_restart.dat
maintained_restart = -1 ; (neg==off; 9998 => q9998.dat, a9998.dat, t9998.ini)
report_frame_idx = -1; frame idx used to report real-time state to matlab
datafmt     = 1   ; 1 for ascii, 5 for hdf5.
nout_per_restart = 1
num_subintervals = -1 ; # subintervals per frame to write report (neg = always)
use_divfree = 0   ; (1-yes, 0-no)
withPyClawPlotting = 0; (1-yes, 0-no)
ic_quad_order = -100; order of quadrature for L2-projection of initial conditions