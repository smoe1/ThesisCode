function plotsphere2(outputdir_in)

global outputdir
if(nargin<1)
  outputdir='mesh_output';
else
  outputdir=outputdir_in;
end

% TITLE INFO --------------------------------------------------------------
disp(' ')
disp('  2D SPHERE UNSTRUCTURED GRID PLOTTING ROUTINE')
disp(' ')
% END TITLE INFO ----------------------------------------------------------

display(' Loading grid data: please wait ...');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% READ-IN MESH INFO %%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
fids = fopen([outputdir '/mesh_params.dat'],'r');
if fids==-1
  display(' ');
  error(['File  ',outputdir,'/mesh_params.dat  not found.']);
end
NumElems = fscanf(fids,'%d',1);  fscanf(fids,'%s',1); fscanf(fids,'%s',1);
NumPhysElems = fscanf(fids,'%d',1);  fscanf(fids,'%s',1); fscanf(fids,'%s',1);
NumGhostElems = fscanf(fids,'%d',1);  fscanf(fids,'%s',1); fscanf(fids,'%s',1);
NumNodes = fscanf(fids,'%d',1);  fscanf(fids,'%s',1); fscanf(fids,'%s',1);
NumPhysNodes = fscanf(fids,'%d',1);  fscanf(fids,'%s',1); fscanf(fids,'%s',1);
NumBndNodes = fscanf(fids,'%d',1);  fscanf(fids,'%s',1); fscanf(fids,'%s',1);
NumEdges = fscanf(fids,'%d',1);  fscanf(fids,'%s',1); fscanf(fids,'%s',1);
fclose(fids);

fids = fopen([outputdir '/mesh_tnode.dat'],'r');
tmp = fscanf(fids,'%d %d %d',[3,inf]);
fclose(fids);
tnode = transpose(tmp);
clear tmp;

fids = fopen([outputdir '/mesh_node.dat'],'r');
tmp = fscanf(fids,'%e',[2,inf]);
fclose(fids);
node_sphere = transpose(tmp);
clear tmp;

node = zeros(NumNodes,3);
for n=1:NumNodes
  lon = node_sphere(n,1);
  lat = node_sphere(n,2);
  
  theta = 0.5*pi - lat;
  phi = lon + pi;
  
  node(n,1) = sin(theta) * cos(phi);
  node(n,2) = sin(theta) * sin(phi);
  node(n,3) = cos(theta);
end

fids = fopen([outputdir '/mesh_area_prim.dat'],'r');
tmp = fscanf(fids,'%e',[1,inf]);
fclose(fids);
area_prim = transpose(tmp);
clear tmp;

fids = fopen([outputdir '/mesh_area_dual.dat'],'r');
tmp = fscanf(fids,'%e',[1,inf]);
fclose(fids);
area_dual = transpose(tmp);
clear tmp;

fids = fopen([outputdir '/mesh_edge.dat'],'r');
tmp = fscanf(fids,'%e %e %e %e',[4,inf]);
fclose(fids);
edge = transpose(tmp);
clear tmp;

fids = fopen([outputdir '/mesh_tedge.dat'],'r');
tmp = fscanf(fids,'%d %d %d',[3,inf]);
fclose(fids);
tedge = transpose(tmp);
clear tmp;

fids = fopen([outputdir '/mesh_eelem.dat'],'r');
tmp = fscanf(fids,'%d %d',[2,inf]);
fclose(fids);
eelem = transpose(tmp);
clear tmp;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

display(' Finished loading grid data.');
display(' ');

xmin = min(node(:,1));
ymin = min(node(:,2));
zmin = min(node(:,3));
xmax = max(node(:,1));
ymax = max(node(:,2));
zmax = max(node(:,3));

xtmp = 0.01*(xmax-xmin);
ytmp = 0.01*(ymax-ymin);
ztmp = 0.01*(zmax-zmin);

xmin = xmin - xtmp;
xmax = xmax + xtmp;

ymin = ymin - ytmp;
ymax = ymax + ytmp;

zmin = zmin - ztmp;
zmax = zmax + ztmp;

figure(1);
clf;
ztri=trisurf(tnode,node(:,1),node(:,2),node(:,3),...
             zeros(size(node(:,1)))); 
colormap('jet');
axis on; box off; grid on;
axis('equal');
axis([xmin xmax ymin ymax zmin zmax]);
set(gca,'fontsize',14);
t1 = title('Mesh Generated by MeshGenC++');
set(t1,'fontsize',14);
set(gca,'plotboxaspectratio',[1 1 1]);
view([35 15]);
hold off;
axis([-1 1 -1 1 -1 1]);
set(gca,'xtick',-1:1:1);
set(gca,'ytick',-1:1:1);
set(gca,'ztick',-1:1:1);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%  CALL EXTRA FUNCTION, SPECIFIED BY USER
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
plot_extra
